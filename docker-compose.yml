version: '3.8'

services:
  db:
    image: postgres:15
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "6543:5432"      # ← host 6543 → container 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  temporal:
    image: temporalio/auto-setup:1.22.3
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PASSWORD}
      - POSTGRES_SEEDS=db
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
    ports:
      - "7233:7233"    # Frontend gRPC
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./temporal/dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    image: temporalio/admin-tools:1.22.3
    depends_on:
      - temporal

  temporal-web:
    image: temporalio/ui:2.21.3
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:8080
    ports:
      - "8080:8080"    # Web UI
    depends_on:
      - temporal

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ./start.sh
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      TEMPORAL_HOST_PORT: temporal:7233
    ports:
      - "8001:8000"      # ← host 8001 → container 8000
    volumes:
      - ./backend:/app/backend
    depends_on:
      db:
        condition: service_healthy
      temporal:
        condition: service_started

volumes:
  db_data:
