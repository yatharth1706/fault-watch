version: '3.8'

services:
  db:
    image: postgres:15
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "6543:5432"      # ← host 6543 → container 5432

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ./start.sh
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
    ports:
      - "8001:8000"      # ← host 8001 → container 8000
    volumes:
      - ./backend:/app/backend
    depends_on:
      - db
      - redis

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A celery_app worker --loglevel=info
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      PYTHONPATH: /app/backend
    volumes:
      - ./backend:/app/backend
    depends_on:
      - redis
      - db
      - backend

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A celery_app flower --port=5555 --broker=${REDIS_URL}
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      PYTHONPATH: /app/backend
    volumes:
      - ./backend:/app/backend
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery_worker

  beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A celery_app beat --loglevel=info
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      PYTHONPATH: /app/backend
    volumes:
      - ./backend:/app/backend
    depends_on:
      - redis
      - celery_worker

volumes:
  db_data:
