"""enhance error schema with sentry-like fields

Revision ID: ff401bf5a34d
Revises: b0d579c3e099
Create Date: 2025-06-12 16:36:36.248703

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ff401bf5a34d'
down_revision = 'b0d579c3e099'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('raw_error', sa.Column('environment', sa.String(length=100), nullable=False))
    op.add_column('raw_error', sa.Column('level', sa.String(length=20), nullable=False))
    op.add_column('raw_error', sa.Column('exception_type', sa.String(length=255), nullable=True))
    op.add_column('raw_error', sa.Column('exception_value', sa.Text(), nullable=True))
    op.add_column('raw_error', sa.Column('exception_module', sa.String(length=255), nullable=True))
    op.add_column('raw_error', sa.Column('tags', sa.JSON(), nullable=True))
    op.add_column('raw_error', sa.Column('extra', sa.JSON(), nullable=True))
    op.add_column('raw_error', sa.Column('user_id', sa.String(length=255), nullable=True))
    op.add_column('raw_error', sa.Column('user_username', sa.String(length=255), nullable=True))
    op.add_column('raw_error', sa.Column('user_email', sa.String(length=255), nullable=True))
    op.add_column('raw_error', sa.Column('user_ip', sa.String(length=45), nullable=True))
    op.add_column('raw_error', sa.Column('request_method', sa.String(length=10), nullable=True))
    op.add_column('raw_error', sa.Column('request_url', sa.Text(), nullable=True))
    op.add_column('raw_error', sa.Column('request_headers', sa.JSON(), nullable=True))
    op.add_column('raw_error', sa.Column('request_data', sa.JSON(), nullable=True))
    op.add_column('raw_error', sa.Column('timestamp', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('raw_error', sa.Column('release', sa.String(length=100), nullable=True))
    op.create_index('idx_level_timestamp', 'raw_error', ['level', 'timestamp'], unique=False)
    op.create_index('idx_service_env_timestamp', 'raw_error', ['service', 'environment', 'timestamp'], unique=False)
    op.create_index(op.f('ix_raw_error_environment'), 'raw_error', ['environment'], unique=False)
    op.create_index(op.f('ix_raw_error_service'), 'raw_error', ['service'], unique=False)
    op.create_index(op.f('ix_raw_error_user_id'), 'raw_error', ['user_id'], unique=False)
    op.rename_table('raw_error', 'raw_errors')
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table('raw_errors', 'raw_error')
    
    op.drop_index(op.f('ix_raw_error_user_id'), table_name='raw_error')
    op.drop_index(op.f('ix_raw_error_service'), table_name='raw_error')
    op.drop_index(op.f('ix_raw_error_environment'), table_name='raw_error')
    op.drop_index('idx_service_env_timestamp', table_name='raw_error')
    op.drop_index('idx_level_timestamp', table_name='raw_error')
    op.drop_column('raw_error', 'release')
    op.drop_column('raw_error', 'timestamp')
    op.drop_column('raw_error', 'request_data')
    op.drop_column('raw_error', 'request_headers')
    op.drop_column('raw_error', 'request_url')
    op.drop_column('raw_error', 'request_method')
    op.drop_column('raw_error', 'user_ip')
    op.drop_column('raw_error', 'user_email')
    op.drop_column('raw_error', 'user_username')
    op.drop_column('raw_error', 'user_id')
    op.drop_column('raw_error', 'extra')
    op.drop_column('raw_error', 'tags')
    op.drop_column('raw_error', 'exception_module')
    op.drop_column('raw_error', 'exception_value')
    op.drop_column('raw_error', 'exception_type')
    op.drop_column('raw_error', 'level')
    op.drop_column('raw_error', 'environment')
    
    # ### end Alembic commands ###
