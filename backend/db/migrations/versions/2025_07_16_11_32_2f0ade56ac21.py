"""projects and org

Revision ID: 2f0ade56ac21
Revises: d4a08b7a2f4b
Create Date: 2025-07-16 11:32:46.397374

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2f0ade56ac21'
down_revision = 'd4a08b7a2f4b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index('idx_org_created', 'organizations', ['created_at'], unique=False)
    op.create_index('idx_org_slug', 'organizations', ['slug'], unique=False)
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('platform', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('retention_days', sa.Integer(), server_default='90', nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    unique_constraints=[('organization_id', 'slug')]
    )
    op.create_index('idx_project_org_id', 'projects', ['organization_id'], unique=False)
    op.create_index('idx_project_slug', 'projects', ['slug'], unique=False)
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('api_keys',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('prefix', sa.String(length=8), nullable=False),
    sa.Column('key_hash', sa.String(length=128), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_used_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_api_key_active', 'api_keys', ['is_active'], unique=False)
    op.create_index('idx_api_key_prefix', 'api_keys', ['prefix'], unique=False)
    op.create_index('idx_api_key_project', 'api_keys', ['project_id'], unique=False)
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    op.add_column('error_groups', sa.Column('project_id', sa.Integer(), nullable=False))
    op.add_column('error_groups', sa.Column('assigned_to', sa.Integer(), nullable=True))
    op.add_column('error_groups', sa.Column('resolved_by', sa.Integer(), nullable=True))
    op.add_column('error_groups', sa.Column('resolved_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('error_groups', sa.Column('ignored_by', sa.Integer(), nullable=True))
    op.add_column('error_groups', sa.Column('ignored_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('error_groups', sa.Column('last_assigned_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('error_groups', sa.Column('last_user_seen', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('error_groups', sa.Column('unique_users_count', sa.BigInteger(), nullable=False))
    op.add_column('error_groups', sa.Column('avg_events_per_day', sa.Float(), nullable=True))
    op.create_index('idx_error_groups_project_status', 'error_groups', ['project_id', 'status'], unique=False)
    op.create_foreign_key('error_groups_project_id_fkey', 'error_groups', 'projects', ['project_id'], ['id'])
    op.add_column('raw_errors', sa.Column('project_id', sa.Integer(), nullable=False))
    op.add_column('raw_errors', sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.create_index('idx_raw_errors_expires_at', 'raw_errors', ['expires_at'], unique=False)
    op.create_index('idx_raw_errors_project_timestamp', 'raw_errors', ['project_id', 'timestamp'], unique=False)
    op.create_foreign_key('raw_errors_project_id_fkey', 'raw_errors', 'projects', ['project_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('raw_errors_project_id_fkey', 'raw_errors', type_='foreignkey')
    op.drop_index('idx_raw_errors_project_timestamp', table_name='raw_errors')
    op.drop_index('idx_raw_errors_expires_at', table_name='raw_errors')
    op.drop_column('raw_errors', 'expires_at')
    op.drop_column('raw_errors', 'project_id')
    op.drop_constraint('error_groups_project_id_fkey', 'error_groups', type_='foreignkey')
    op.drop_index('idx_error_groups_project_status', table_name='error_groups')
    op.drop_column('error_groups', 'avg_events_per_day')
    op.drop_column('error_groups', 'unique_users_count')
    op.drop_column('error_groups', 'last_user_seen')
    op.drop_column('error_groups', 'last_assigned_at')
    op.drop_column('error_groups', 'ignored_at')
    op.drop_column('error_groups', 'ignored_by')
    op.drop_column('error_groups', 'resolved_at')
    op.drop_column('error_groups', 'resolved_by')
    op.drop_column('error_groups', 'assigned_to')
    op.drop_column('error_groups', 'project_id')
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_index('idx_api_key_project', table_name='api_keys')
    op.drop_index('idx_api_key_prefix', table_name='api_keys')
    op.drop_index('idx_api_key_active', table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_index('idx_project_slug', table_name='projects')
    op.drop_index('idx_project_org_id', table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_index('idx_org_slug', table_name='organizations')
    op.drop_index('idx_org_created', table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ###
